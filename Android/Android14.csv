Category, Type, Name, Info, Describe, API_List, Source
"Accessibility","Change (all apps)","Test your app with non-linear font scaling","Because Android supports font scaling up to 200%, you should perform UI testing to ensure that your app can accommodate larger font sizes without impacting usability.","Because Android supports font scaling up to 200%, you should perform UI testing to ensure that your app can accommodate larger font sizes without impacting usability.","[]","https://developer.android.com/about/versions/14/behavior-changes-all#non-linear-font-scaling"
"Accessibility","New features and APIs","Non-linear font scaling to 200%","Android supports font scaling up to 200%, providing low-vision users with additional accessibility options that align with Web Content Accessibility Guidelines (WCAG).","Android supports font scaling up to 200%, providing low-vision users with additional accessibility options that align with Web Content Accessibility Guidelines (WCAG).","[]","https://developer.android.com/about/versions/14/features#non-linear-font-scaling"
"Camera and media","New features and APIs","Ultra HDR for images","Android 14 adds support for High Dynamic Range (HDR) images that retain more of the information from the sensor when taking a photo, which enables vibrant colors and greater contrast.","Android 14 adds support for High Dynamic Range (HDR) images that retain more of the information from the sensor when taking a photo, which enables vibrant colors and greater contrast.","[]","https://developer.android.com/about/versions/14/features#ultra-hdr"
"Camera and media","New features and APIs","Zoom, Focus, Postview, and more in camera extensions","Android 14 upgrades and improves camera extensions, allowing apps to handle longer processing times, which enables improved images using compute-intensive algorithms like low-light photography on supported devices.","Android 14 upgrades and improves camera extensions, allowing apps to handle longer processing times, which enables improved images using compute-intensive algorithms like low-light photography on supported devices.","[]","https://developer.android.com/about/versions/14/features#camera-extensions"
"Core functionality","Change (all apps)","Schedule exact alarms are denied by default","Starting in Android 14, the SCHEDULE_EXACT_ALARM permission is no longer being pre-granted to most newly installed apps targeting Android 13 and higher—the permission is denied by default.","Starting in Android 14, the SCHEDULE_EXACT_ALARM permission is no longer being pre-granted to most newly installed apps targeting Android 13 and higher—the permission is denied by default. Exact alarms are meant for user-intentioned notifications, or for actions that need to happen at a precise time.","['SCHEDULE_EXACT_ALARM']","https://developer.android.com/about/versions/14/changes/schedule-exact-alarms"
"Core functionality","Change (all apps)","Context-registered broadcasts are queued while apps are cached","The system may place context-registered broadcasts in a queue when these broadcasts are queued for delivery to an app that's in the cached state.","On Android 14, the system can place context-registered broadcasts in a queue while the app is in the cached state. This is similar to the queuing behavior that Android 12 introduced for async binder transactions. Manifest-declared broadcasts aren't queued, and apps are removed from the cached state for broadcast delivery.\n\nWhen the app leaves the cached state, such as returning to the foreground, the system delivers any queued broadcasts. Multiple instances of certain broadcasts might be merged into one broadcast. Depending on other factors, such as system health, apps might be removed from the cached state, and any previously queued broadcasts are delivered.","[]","https://developer.android.com/about/versions/14/behavior-changes-all#pending-broadcasts"
"Core functionality","Change (all apps)","Apps can kill only their own background processes","When your app calls killBackgroundProcesses(), the API can kill only the background processes of your own app.","Starting in Android 14, when your app calls killBackgroundProcesses(), the API can kill only the background processes of your own app. If you pass in the package name of another app, this method has no effect on that app's background processes.\n\nYour app shouldn't use the killBackgroundProcesses() API or otherwise attempt to influence the process lifecycle of other apps, even on older OS versions. Android is designed to keep cached apps in the background and kill them automatically when the system needs memory.","['killBackgroundProcesses']","https://developer.android.com/about/versions/14/behavior-changes-all#kill-own-background"
"Security","Change (all apps)","Minimum installable target API level","Starting with Android 14, apps with a targetSdkVersion lower than 23 can't be installed.","Starting with Android 14, apps with a targetSdkVersion lower than 23 can't be installed. Requiring apps to meet these minimum target API level requirements improves security and privacy for users.\n\nMalware often targets older API levels in order to bypass security and privacy protections that have been introduced in newer Android versions. For example, some malware apps use a targetSdkVersion of 22 to avoid being subjected to the runtime permissions model.","['targetSdkVersion']","https://developer.android.com/about/versions/14/behavior-changes-all#minimum-target-api"
"User experience","Change (all apps)","Changes to how users experience non-dismissible notifications","If your app shows non-dismissable foreground notifications to users, Android 14 has changed the behavior to allow users to dismiss such notifications.","If your app shows non-dismissable foreground notifications to users, Android 14 has changed the behavior to allow users to dismiss such notifications. This change applies to apps that prevent users from dismissing foreground notifications by setting Notification.FLAG_ONGOING_EVENT through Notification.Builder#setOngoing(true) or NotificationCompat.Builder#setOngoing(true). The behavior of FLAG_ONGOING_EVENT has changed to make such notifications actually dismissable by the user.\n\nThese notifications are still non-dismissable when the phone is locked.","['Notification.FLAG_ONGOING_EVENT', 'Notification.Builder#setOngoing', 'NotificationCompat.Builder#setOngoing']","https://developer.android.com/about/versions/14/behavior-changes-all#non-dismissible-notifications"
"Privacy","Change (apps targeting 14+)","Partial access to photos and videos","The user can grant partial access to their photos and videos when an app requests any visual media permissions that were introduced in Android 13.","The user can grant partial access to their photos and videos when an app requests any visual media permissions that were introduced in Android 13 (API level 33): READ_MEDIA_IMAGES and READ_MEDIA_VIDEO. This change gives users more control over their media and privacy by allowing them to select specific photos and videos that an app can access.","['READ_MEDIA_IMAGES', 'READ_MEDIA_VIDEO']","https://developer.android.com/about/versions/14/changes/partial-photo-video-access"
