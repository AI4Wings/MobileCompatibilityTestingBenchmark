Category, Type, Name, Info, Describe, API_List, Source
"Security","Change (apps targeting 15+)","Secured background activity launches","For apps targeting Android 15, we've included further changes to prevent malicious background apps from bringing other apps to the foreground, elevating their privileges, and abusing user interaction.","Android 15 protects users from malicious apps and gives them more control over their devices by adding changes that prevent malicious background apps from bringing other apps to the foreground, elevating their privileges, and abusing user interaction. Background activity launches have been restricted since Android 10 (API level 29).\n\nOther changes\nIn addition to the restriction for UID matching, these other changes are also included:\n\nChange PendingIntent creators to block background activity launches by default. This helps prevent apps from accidentally creating a PendingIntent that could be abused by malicious actors.\nDon't bring an app to the foreground unless the PendingIntent sender allows it. This change aims to prevent malicious apps from abusing the ability to start activities in the background. By default, apps are not allowed to bring the task stack to the foreground unless the creator allows background activity launch privileges or the sender has background activity launch privileges.\nControl how the top activity of a task stack can finish its task. If the top activity finishes a task, Android will go back to whichever task was last active. Moreover, if a non-top activity finishes its task, Android will go back to the home screen; it won't block the finish of this non-top activity.\nPrevent launching arbitrary activities from other apps into your own task. This change prevents malicious apps from phishing users by creating activities that appear to be from other apps.\nBlock non-visible windows from being considered for background activity launches. This helps prevent malicious apps from abusing background activity launches to display unwanted or malicious content to users.","['allowCrossUidActivitySwitchFromBelow', 'PendingIntent']","https://developer.android.com/about/versions/15/behavior-changes-15#secured-bal"
"Accessibility","New features and APIs","Better Braille","In Android 15, we've made it possible for TalkBack to support Braille displays that are using the HID standard over both USB and secure Bluetooth.","In Android 15, we've made it possible for TalkBack to support Braille displays that are using the HID standard over both USB and secure Bluetooth.\n\nThis standard, much like the one used by mice and keyboards, will help Android support a wider range of Braille displays over time.","['TalkBack']","https://developer.android.com/about/versions/15/features#braille"
"Camera and media","New features and APIs","Low Light Boost","Android 15 introduces Low Light Boost, an auto-exposure mode available to both Camera 2 and the night mode camera extension.","Android 15 introduces Low Light Boost, an auto-exposure mode available to both Camera 2 and the night mode camera extension. Low Light Boost adjusts the exposure of the Preview stream in low-light conditions.\n\nThis is different from how the night mode camera extension creates still images, because night mode combines a burst of photos to create a single, enhanced image. While night mode works very well for creating a still image, it can't create a continuous stream of frames, but Low Light Boost can.\n\nCapabilities enabled:\n- Providing an enhanced image preview for better low-light framing\n- Scanning QR codes in low light","['Camera2', 'CameraExtension']","https://developer.android.com/about/versions/15/features#low-light-boost"
"Camera and media","Change (all apps)","Direct and offload audio playback invalidation","Beginning with Android 15, when an app requests direct playback, the system invalidates previously open direct or offload audio tracks when resource limits are reached.","Beginning with Android 15, when an app requests direct playback, the system invalidates previously open direct or offload audio tracks when resource limits are reached. This affects how audio resources are managed and may require apps to handle track invalidation.","['AudioTrack']","https://developer.android.com/about/versions/15/behavior-changes-all#direct-audio-playback"
"Camera and media","Change (apps targeting 15+)","Restrictions on requesting audio focus","Apps that target Android 15 must be the top app or running an audio-related foreground service in order to request audio focus.","Apps targeting Android 15 must either be the top app or running an audio-related foreground service to request audio focus. This change affects how apps manage audio focus and may require updates to audio handling logic.","['AudioManager', 'AudioFocusRequest']","https://developer.android.com/about/versions/15/behavior-changes-15#audio-focus"
"Camera and media","New features and APIs","Virtual MIDI 2.0 devices","Android 15 extends UMP support to virtual MIDI apps, enabling composition apps to control synthesizer apps as a virtual MIDI 2.0 device just like they would with an USB MIDI 2.0 device.","Android 13 added support for connecting to MIDI 2.0 devices using USB, which communicate using Universal MIDI Packets (UMP). Android 15 extends UMP support to virtual MIDI apps, enabling composition apps to control synthesizer apps as a virtual MIDI 2.0 device just like they would with an USB MIDI 2.0 device.","['MidiUmpDeviceService']","https://developer.android.com/about/versions/15/features#virtual-midi-devices"
"Camera and media","New features and APIs","More efficient AV1 software decoding","dav1d, the popular AV1 software decoder from VideoLAN is now available for Android devices that don't support AV1 decode in hardware.","dav1d, the popular AV1 software decoder from VideoLAN is now available for Android devices that don't support AV1 decode in hardware. dav1d is up to 3x more performant than the legacy AV1 software decoder, enabling HD AV1 playback for more users, including some low and mid tier devices.\n\nYour app needs to opt-in to using dav1d by invoking it by name 'c2.android.av1-dav1d.decoder'. dav1d will be made the default AV1 software decoder in a subsequent update. This support is standardized and backported to Android 11 devices that receive Google Play system updates.","['c2.android.av1-dav1d.decoder']","https://developer.android.com/about/versions/15/features#av1-encoding"
"Core functionality","Change (all apps)","Changes to package stopped state","In Android 15, apps are only be removed from the FLAG_STOPPED state through direct or indirect user action.","In Android 15, apps are only removed from the FLAG_STOPPED state through direct or indirect user action. In addition to the existing restrictions, the system also cancels all pending jobs and alarms when an app enters the stopped state.","['FLAG_STOPPED']","https://developer.android.com/about/versions/15/behavior-changes-all#enhance-package-stopped"
"Security","New features and APIs","Permission checks on content URIs","Android 15 introduces a set of APIs that perform permission checks on content URIs.","Android 15 introduces a set of APIs that perform permission checks on content URIs:\n- Context.checkContentUriPermissionFull: This performs a full permission check on content URIs.\n- Activity manifest attribute requireContentUriPermissionFromCaller: This enforces specified permissions on the provided content URIs at activity launch.\n- ComponentCaller class for Activity callers: This represents the app that launched the activity.","['Context.checkContentUriPermissionFull', 'requireContentUriPermissionFromCaller', 'ComponentCaller']","https://developer.android.com/about/versions/15/features#content-uri"
"Connectivity","New features and APIs","Satellite support","Android 15 continues to extend platform support for satellite connectivity and includes UI elements to ensure a consistent user experience across the satellite connectivity landscape.","Android 15 continues to extend platform support for satellite connectivity and includes UI elements to ensure a consistent user experience across the satellite connectivity landscape.\n\nApps can use ServiceState.isUsingNonTerrestrialNetwork() to detect when a device is connected to a satellite, giving them more awareness of why full network services might be unavailable. Additionally, Android 15 provides support for SMS and MMS apps as well as preloaded RCS apps to use satellite connectivity for sending and receiving messages.","['ServiceState.isUsingNonTerrestrialNetwork']","https://developer.android.com/about/versions/15/features#satellite"
"Camera and media","New features and APIs","Loudness control","Android 15 introduces support for the CTA-2075 loudness standard to help avoid audio loudness inconsistencies and ensure users don't have to constantly adjust volume when switching between content.","Android 15 introduces support for the CTA-2075 loudness standard to help avoid audio loudness inconsistencies and ensure users don't have to constantly adjust volume when switching between content. The system leverages known characteristics of the output devices (headphones and speaker) along with loudness metadata available in AAC audio content to intelligently adjust the audio loudness and dynamic range compression levels.\n\nTo enable this feature, you need to ensure loudness metadata is available in your AAC content and enable the platform feature in your app by instantiating a LoudnessCodecController object.","['LoudnessCodecController', 'MediaCodec', 'OnLoudnessCodecUpdateListener']","https://developer.android.com/about/versions/15/features#loudness"
"User experience and system UI","Change (all apps)","Predictive back animations enabled for apps that opted in","The developer option for predictive back animations has been removed. Instead, system animations such as back-to-home, cross-task, and cross-activity appear for apps that have opted in to the predictive back gesture.","The developer option for predictive back animations has been removed. Instead, system animations such as back-to-home, cross-task, and cross-activity appear for apps that have opted in to the predictive back gesture either entirely or at an activity level.\n\nThis change affects how back navigation animations are handled in apps that have opted into the predictive back gesture feature.","['OnBackInvokedCallback', 'OnBackInvokedDispatcher']","https://developer.android.com/about/versions/15/behavior-changes-all#predictive-back"
